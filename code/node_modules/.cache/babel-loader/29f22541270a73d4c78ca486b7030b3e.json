{"ast":null,"code":"import _slicedToArray from \"/Users/josephine/Desktop/myproject/express-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/josephine/Desktop/myproject/express-app/src/Country.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'; //const data = 'https://first-express-project.herokuapp.com/movies';\n\nconst API = 'https://first-express-project.herokuapp.com/movies';\nexport const Country = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        movies = _useState2[0],\n        setMovies = _useState2[1];\n\n  const _useState3 = useState(['']),\n        _useState4 = _slicedToArray(_useState3, 2),\n        country = _useState4[0],\n        setCountry = _useState4[1];\n\n  const _useState5 = useState(['']),\n        _useState6 = _slicedToArray(_useState5, 2),\n        chosen = _useState6[0],\n        setChosen = _useState6[1];\n\n  const choseCountry = banana => {\n    fetch(`https://first-express-project.herokuapp.com/countries/${banana}`).then(data => data.json()).then(json => {\n      setChosen(json);\n      console.log('hello');\n      console.log(json); //   setCountry('');\n\n      console.log(chosen);\n    });\n  };\n\n  useEffect(() => {\n    fetch(API).then(res => res.json()).then(json => {\n      setMovies(json);\n    });\n  }, []);\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"welcome genre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"icon-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-chevron-circle-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"inputContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Find movies from a particular country.\"), React.createElement(\"form\", {\n    onSubmit: event => {\n      choseCountry(country);\n      event.preventDefault();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"input-button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"inputForm\",\n    required: true,\n    type: \"text\",\n    value: country,\n    placeholder: \"ie France\",\n    onChange: event => setCountry(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"movieList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, chosen.length === 0 ? React.createElement(\"div\", {\n    className: \"notFoundText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Sorry, we couldn't find your country. Please check your spelling or try another one.\")) : chosen.map(item => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, item.title), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, item.release_year), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, item.director), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, item.duration), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, item.description)))));\n};","map":{"version":3,"sources":["/Users/josephine/Desktop/myproject/express-app/src/Country.js"],"names":["React","useEffect","useState","Link","API","Country","movies","setMovies","country","setCountry","chosen","setChosen","choseCountry","banana","fetch","then","data","json","console","log","res","event","preventDefault","target","value","length","map","item","title","release_year","director","duration","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n//const data = 'https://first-express-project.herokuapp.com/movies';\n\nconst API = 'https://first-express-project.herokuapp.com/movies';\n\nexport const Country = () => {\n  const [movies, setMovies] = useState([]);\n  const [country, setCountry] = useState(['']);\n  const [chosen, setChosen] = useState(['']);\n\n  const choseCountry = (banana) => {\n    fetch(`https://first-express-project.herokuapp.com/countries/${banana}`)\n      .then((data) => data.json())\n\n      .then((json) => {\n        setChosen(json);\n        console.log('hello');\n        console.log(json);\n        //   setCountry('');\n        console.log(chosen);\n      });\n  };\n\n  useEffect(() => {\n    fetch(API)\n      .then((res) => res.json())\n      .then((json) => {\n        setMovies(json);\n      });\n  }, []);\n\n  return (\n    <main>\n      <section className='welcome genre'>\n        <div>\n          <Link to={`/`}>\n            <div className='icon-container'>\n              <div className='icon'>\n                <i className='fas fa-chevron-circle-left'></i>\n              </div>\n            </div>\n          </Link>\n        </div>\n        <div className='inputContainer'>\n          <h4>Find movies from a particular country.</h4>\n          <form\n            onSubmit={(event) => {\n              choseCountry(country);\n              event.preventDefault();\n            }}\n          >\n            <label className='input-button' type='submit'>\n              <input\n                className='inputForm'\n                required\n                type='text'\n                value={country}\n                placeholder='ie France'\n                onChange={(event) => setCountry(event.target.value)}\n              />\n            </label>\n          </form>\n        </div>\n      </section>\n      <div className='movieList'>\n        {chosen.length === 0 ? (\n          <div className='notFoundText'>\n            <h4>\n              Sorry, we couldn't find your country. Please check your spelling\n              or try another one.\n            </h4>\n          </div>\n        ) : (\n          chosen.map((item) => (\n            <div>\n              <h3>{item.title}</h3>\n              <h2>{item.release_year}</h2>\n              <h2>{item.director}</h2>\n              <h2>{item.duration}</h2>\n              <p>{item.description}</p>\n            </div>\n          ))\n        )}\n      </div>\n    </main>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}